version: '3.4'

services:
  consul:
    image: consul:latest
    command: consul agent -dev -log-level=warn -ui -client=0.0.0.0
    hostname: consul
    container_name: consul
    networks:
      - joker-network
    ports:
      - "8500:8500"              
  seq:
    container_name: "seq"
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:80"
    volumes:
      - ./data/volumes/seq:/data  
    networks:
      - joker-network      
        
  rabbitmq:
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - joker-network      
        
  postgres:
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - ./data/volumes/postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - joker-network
    
  nosqldata:
    container_name: "mongo"
    ports:
      - "27017:27017"
    volumes:
      - ./data/volumes/mongo:/data/db
    networks:
      - joker-network        
        
  merchant-api:
    container_name: "merchant-api"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - GRPC_PORT=81
      - PORT=80
    ports:
      - "5000:80"
    networks:
      - joker-network        
      
  campaign-api:
    container_name: "campaign-api"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - GRPC_PORT=81
      - PORT=80
    ports:
      - "5001:80"
    networks:
      - joker-network      
        
  management-api:
    container_name: "management-api"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - GRPC_PORT=81
      - PORT=80
    ports:
      - "5002:80"
    networks:
      - joker-network      
        
  location-api:
    container_name: "location-api"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - GRPC_PORT=81
      - PORT=80
    ports:
      - "5003:80"   
    networks:
      - joker-network      
        
  search-api:
    container_name: "search-api"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - GRPC_PORT=81
      - PORT=80
    ports:
      - "5004:80"
    networks:
      - joker-network      
  
  identity-api:
    container_name: "identity-api"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - GRPC_PORT=81
      - PORT=80      
    ports:
      - "5008:80"
    networks:
      - joker-network
      
  subscription-api:
    container_name: "subscription-api"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - GRPC_PORT=81
      - PORT=80
    ports:
      - "5007:80"
    networks:
      - joker-network      
        
  aggregator-api:
    container_name: "aggregator-api"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - GRPC_PORT=81
      - PORT=80
    ports:
      - "5006:80"
    networks:
      - joker-network
        
  gateway-web-api:
    container_name: "gateway-web-api"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "5009:80"
    networks:
      - joker-network        

  joker-webapp:
    container_name: "joker-webapp"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - GatewayUrl=http://gateway-web-api
    ports:
      - "5030:80"
    networks:
      - joker-network

  merchant-integration-tests:
    container_name: merchant-integration-tests
    image: mcr.microsoft.com/dotnet/sdk:5.0   
    working_dir: /src
    volumes:
      - .:/src
    command:
        [
            "dotnet",
            "test",
            "src/Services/Merchant/Merchant.IntegrationTests/Merchant.IntegrationTests.csproj"
        ]
    networks:
      - joker-network
        
networks:
  joker-network:
    external: true        