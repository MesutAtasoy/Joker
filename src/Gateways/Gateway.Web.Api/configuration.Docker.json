{
  "Routes": [
    {
      "DownstreamScheme": "http",
      "ServiceName": "Merchant.Api",
      "DownstreamPathTemplate": "/api/{everything}",
      "UpstreamPathTemplate": "/merchant/api/{everything}",
      "SwaggerKey": "merchant",
      "UpstreamHttpMethod": ["GET", "POST", "PUT", "DELETE"],
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 1000,
        "TimeoutValue": 5000
      }
    },
    {
      "DownstreamScheme": "http",
      "ServiceName": "Management.Api",
      "DownstreamPathTemplate": "/api/{everything}",
      "UpstreamPathTemplate": "/management/api/{everything}",
      "SwaggerKey": "management",
      "UpstreamHttpMethod": ["GET", "POST", "PUT", "DELETE"],
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 1000,
        "TimeoutValue": 5000
      }
    },
    {
      "DownstreamScheme": "http",
      "ServiceName": "Location.Api",
      "DownstreamPathTemplate": "/api/{everything}",
      "UpstreamPathTemplate": "/location/api/{everything}",
      "SwaggerKey": "location",
      "UpstreamHttpMethod": ["GET", "POST", "PUT", "DELETE"],
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 1000,
        "TimeoutValue": 5000
      }
    },
    {
      "DownstreamScheme": "http",
      "ServiceName": "Campaign.Api",
      "DownstreamPathTemplate": "/api/{everything}",
      "UpstreamPathTemplate": "/campaign/api/{everything}",
      "SwaggerKey": "campaign",
      "UpstreamHttpMethod": ["GET", "POST", "PUT", "DELETE"],
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 1000,
        "TimeoutValue": 5000
      }
    },
    {
      "DownstreamScheme": "http",
      "ServiceName": "Search.Api",
      "DownstreamPathTemplate": "/api/{everything}",
      "UpstreamPathTemplate": "/search/api/{everything}",
      "SwaggerKey": "search",
      "UpstreamHttpMethod": ["GET"],
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 1000,
        "TimeoutValue": 5000
      },
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      }
    },
    {
      "DownstreamScheme": "http",
      "ServiceName": "Aggregator.Api",
      "DownstreamPathTemplate": "/api/{everything}",
      "UpstreamPathTemplate": "/aggregator/api/{everything}",
      "SwaggerKey": "aggregator",
      "UpstreamHttpMethod": ["GET", "POST", "PUT", "DELETE"],
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 1000,
        "TimeoutValue": 500000
      },
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      }
    }
  ],
  "SwaggerEndPoints": [
    {
      "Key": "merchant",
      "Config": [
        {
          "Name": "Merchant API",
          "Version": "v1",
          "Url": "http://merchant.api/swagger/v1/swagger.json"
        }
      ]
    },
    {
      "Key": "campaign",
      "Config": [
        {
          "Name": "Campaign API",
          "Version": "v1",
          "Url": "http://campaign.api/swagger/v1/swagger.json"
        }
      ]
    },
    {
      "Key": "management",
      "Config": [
        {
          "Name": "Management API",
          "Version": "v1",
          "Url": "http://management.api/swagger/v1/swagger.json"
        }
      ]
    },
    {
      "Key": "location",
      "Config": [
        {
          "Name": "Location API",
          "Version": "v1",
          "Url": "http://location.api/swagger/v1/swagger.json"
        }
      ]
    },
    {
      "Key": "search",
      "Config": [
        {
          "Name": "Search API",
          "Version": "v1",
          "Url": "http://search.api/swagger/v1/swagger.json"
        }
      ]
    },
    {
      "Key": "aggregator",
      "Config": [
        {
          "Name": "Aggregator API",
          "Version": "v1",
          "Url": "http://aggregator.api/swagger/v1/swagger.json"
        }
      ]
    }
  ],
  "GlobalConfiguration": {
    "RequestIdKey": "OcRequestId",
    "ServiceDiscoveryProvider": {
      "Host": "consul",
      "Port": 8500,
      "Type": "Consul"
    }
  }
}